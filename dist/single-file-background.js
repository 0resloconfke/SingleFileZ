!function(){"use strict";const e=new Map,t=8388608;function r(t,s,a){return new Promise(((n,i)=>{const o=new XMLHttpRequest;if(o.withCredentials=!0,o.responseType="arraybuffer",o.onerror=e=>i(new Error(e.detail)),o.onreadystatechange=()=>{o.readyState==XMLHttpRequest.DONE&&(o.status||o.response.byteLength?401!=o.status&&403!=o.status&&404!=o.status||a?n({array:Array.from(new Uint8Array(o.response)),headers:{"content-type":o.getResponseHeader("Content-Type")},status:o.status}):r(t,s,!0).then(n).catch(i):i())},o.open("GET",t,!0),a){const t=String(Math.random()).substring(2);d=t,l=s.referrer,e.set(d,l),o.setRequestHeader("x-single-file-request-id",t)}var d,l;o.send()}))}browser.runtime.onMessage.addListener(((e,s)=>{if(e.method&&e.method.startsWith("singlefile.fetch"))return new Promise((t=>{(function(e,t){if("singlefile.fetch"==e.method)return r(e.url,{referrer:e.referrer});if("singlefile.fetchFrame"==e.method)return browser.tabs.sendMessage(t.tab.id,e)})(e,s).then(t).catch((e=>t({error:e&&e.toString()})))}));"singlefile.multipartFetch"==e.method&&async function(e,s){try{const a=await r(e.url),n=e.id;for(let e=0;e*t<a.array.length;e++){const r={method:"singlefile.multipartResponse",id:n};r.truncated=a.array.length>t,r.truncated?(r.finished=(e+1)*t>a.array.length,r.array=a.array.slice(e*t,(e+1)*t)):r.array=a.array,r.truncated&&!r.finished||(r.headers=a.headers,r.status=a.status),browser.tabs.sendMessage(s.tab.id,r)}}catch(t){await browser.tabs.sendMessage(s.tab.id,{method:"singlefile.multipartResponse",id:e.id,error:t&&t.toString()})}}(e,s)})),browser.runtime.onMessage.addListener(((e,t)=>{if("singlefile.frameTree.initResponse"==e.method||"singlefile.frameTree.ackInitRequest"==e.method)return browser.tabs.sendMessage(t.tab.id,e,{frameId:0}),Promise.resolve({})}));const s=new Map;function a(e,t){e.delete(t)}browser.runtime.onMessage.addListener(((e,t)=>{if("singlefile.lazyTimeout.setTimeout"==e.method){let r,n=s.get(t.tab.id);if(n)if(r=n.get(t.frameId),r){const t=r.get(e.type);t&&clearTimeout(t)}else r=new Map;const i=setTimeout((async()=>{try{const r=s.get(t.tab.id),n=r.get(t.frameId);r&&n&&a(n,e.type),await browser.tabs.sendMessage(t.tab.id,{method:"singlefile.lazyTimeout.onTimeout",type:e.type})}catch(e){}}),e.delay);return n||(n=new Map,r=new Map,n.set(t.frameId,r),s.set(t.tab.id,n)),r.set(e.type,i),Promise.resolve({})}if("singlefile.lazyTimeout.clearTimeout"==e.method){let r=s.get(t.tab.id);if(r){const s=r.get(t.frameId);if(s){const t=s.get(e.type);t&&clearTimeout(t),a(s,e.type)}}return Promise.resolve({})}})),browser.tabs.onRemoved.addListener((e=>s.delete(e)))}();
